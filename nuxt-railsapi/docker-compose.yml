services:
  # MySQL データベース
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: nuxt_railsapi_development
      MYSQL_USER: rails
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "${DATABASE_PORT:-3306}:3306"
    networks:
      - nuxt-railsapi-network

  # Rails API バックエンド
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/src:/app
      - bundle_cache:/usr/local/bundle
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    depends_on:
      - db
    environment:
      DATABASE_HOST: db
      DATABASE_USERNAME: rails
      DATABASE_PASSWORD: password
      DATABASE_NAME: nuxt_railsapi_development
      DATABASE_TEST_NAME: nuxt_railsapi_test
      RAILS_ENV: development
      # OAuthのリダイレクト先設定のために追加
      FRONTEND_PORT: ${FRONTEND_PORT:-3000}
    stdin_open: true
    tty: true
    networks:
      - nuxt-railsapi-network

  # Nuxt.js フロントエンド
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/src:/app
      - node_modules:/app/node_modules
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    depends_on:
      - backend
    environment:
      NODE_ENV: development
      NUXT_PUBLIC_API_BASE_URL: http://localhost:${BACKEND_PORT:-53000}
      NUXT_API_BASE_URL: "${NUXT_API_BASE_URL:-http://backend:3000}"
      NUXT_PUBLIC_OAUTH_CLIENT_ID: ${NUXT_PUBLIC_OAUTH_CLIENT_ID}
      NUXT_PUBLIC_OAUTH_CLIENT_SECRET: ${NUXT_PUBLIC_OAUTH_CLIENT_SECRET}
    stdin_open: true
    tty: true
    networks:
      - nuxt-railsapi-network

volumes:
  mysql_data:
  bundle_cache:
  node_modules:

networks:
  nuxt-railsapi-network:
    driver: bridge
